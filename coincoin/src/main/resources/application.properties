# ===============================
# Configuration serveur
# ===============================

server.port=8080

# ===============================
# Configuration base de données mémoire H2
# ===============================

spring.datasource.url=jdbc:h2:mem:test
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=root
spring.datasource.password=

# Activer la console H2 pour aller sur http://localhost:8080/h2-console
spring.h2.console.enabled=true

# ===============================
# Configuration Hibernate
# ===============================

# Ne pas utiliser Hibernate pour la génération du DDL
# On laisse H2 s'en occuper (créer les tables et les remplir)
hibernate.hbm2ddl.auto:none

# Stratégie de nommage Hibernate
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Renseignement du dialecte pour permettant à Hibernate de générer des requêtes SQL optimisées pour un SGBD particulier
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect

# ===============================
# Configuration des logs
# ===============================

# Activation des logs Hibernate avec choix du niveau (TRACE, DEBUG, INFO, WARN, ERROR)
### HIBERNATE
logging.level.org.hibernate.SQL=DEBUG
### SPRING DATA JPA
#spring.jpa.show-sql=true

# Formatage des logs des requêtes
spring.jpa.properties.hibernate.format_sql=true

# Activation (si besoin) de TOUS les logs Hibernate (pour debugger seulement, pas optimisé)
#spring.jpa.show-sql=true

# Activation (si besoin) des logs pour le binding des paramètres des requêtes
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE



